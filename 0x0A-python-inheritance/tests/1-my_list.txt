The ``1-my_list``module
===================

using ``1-my_list`` function in the module
--------------------------------------

Import function from module:
	>>> MyList = __import__('1-my_list').MyList

Test: Meet all requirements:

	>>> test = MyList([1, 8, 7])
	>>> test.print_sorted()
	[1, 7, 8]

Test: Check if obj is an inst of list:

	>>> obj = MyList()
	>>> isinstance(obj, list)
	True

Test: Check if MyList is a class?:

	>>> test = MyList()
	>>> type(test) == MyList
	True

Test: No args passed to print_sorted func:

	>>> test = MyList()
	>>> test.__class__.print_sorted()
	Traceback (most recent call last):
	...
	TypeError: print_sorted() missing 1 required positional argument: 'self'

Test: Pass empty list for print_sorted func:

	>>> test = MyList()
	>>> test.print_sorted()
	[]

Test: Pass two arg:

	>>> test.print_sorted([10])
	Traceback (most recent call last):
	...
	TypeError: print_sorted() takes 1 positional argument but 2 were given

Test: Pass multiple ars:

	>>> test.print_sorted([1, 2, 3], 4)
	Traceback (most recent call last):
	...
	TypeError: print_sorted() takes 1 positional argument but 3 were given

Test: Pass in mix of positive and negative:

	>>> test =  MyList([-1, 2, -3])
	>>> test.print_sorted()
	[-1, -3, 2]

Test: Pass in negative numbers in list:

	>>> test = MyList([-1, -2, -3])
	>>> test.print_sorted()
	[-3, -2, -1]

